services: {
  scheduler: {
    errorOnFailureToPut: false
  }
  NetMonTransportServiceInterface: {
    service_provider: NetMonTransportService
    broadcast_sends: true
    nonblocking_sends: true
	destinations: { }
  }
}

daq: {
  aggregator: {
    expected_events_per_bunch: 1
    print_event_store_stats: true
    event_queue_depth: 40
    event_queue_wait_time: 5
    every_sequence_id_should_be_present: true
	max_fragment_size_bytes: 16777216
    buffer_count: 40
    onmon_event_prescale: 1
    xmlrpc_client_list: ""
    subrun_size_MB: -1
    subrun_duration: -1
    subrun_event_count: 0
    is_data_logger: true

    auto_suppression_enabled: false

	routing_token_config: {
		use_routing_master: false
	}

	sources: { }
  }

  metrics: {
    aggFile: {
      metricPluginType: "file"
      level_string: "1,2,11-20"
      fileName: "/home/nfs/artdaq/icarus_artdaq/metrics/aggregator/agg_%UID%_metrics.log"
      uniquify: true
    }
  }

}

source: {
  module_type: NetMonInput
}
outputs: {
  normalOutput: {
    module_type: RootOutput
    fileName: "/data/artdaqdemo_r%06r_sr%02s_%to_%#.root"
    fileProperties: { maxSubRuns: 1 maxRuns: 1  }
    fastCloning: false
    compressionLevel: 3
  }
  rootNetOutput: {
    module_type: RootNetOutput
    #SelectEvents: { SelectEvents: [ pmod2,pmod3 ] }
  }

}
physics: {
  analyzers: {


   checkintegrity: {
     module_type: CheckIntegrity
     raw_data_label: daq
     frag_type: TOY1
   }
   checkintegrity2: {
     module_type: CheckIntegrity
     raw_data_label: daq
     frag_type: TOY2
   }

  }

  producers: {

     BuildInfo:
     {
       module_type: ArtdaqDemoBuildInfo
       instance_name: ArtdaqDemo
     }
   }

  p2: [ BuildInfo ]
  a1: [ checkintegrity, checkintegrity2 ]
  my_output_modules: [ normalOutput ]
  my_mpi_output_modules: [rootNetOutput]
}
process_name: DAQDL
