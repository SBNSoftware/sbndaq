events_to_generate: 1000

debug_cout: true

fragment_receiver: {

   generator: BernCRTData
   
   fragment_type: BERNCRTV2

   board_id: 1

   ethernet_port: "enp4s0"

#these are in fact MAC addresses of all FEB connected to given ethernet port... perhaps we should change the name
   fragment_ids : [ 0x5c ]
#Whether or not turn on bias HV on the individual FEBs
   TurnOnHV : [ false ] #I don't wan't to switch HV at D0, AA, 2019-10-03
#How much the PPS signal coming to FEB is delayed due to cable length (normally should be > 0)
   PPS_offset_ns : [ 0 ] #0 - dummy value

 
   MaxTimeDiffs : [ 1e8 ]

   FEBBufferCapacity: 98789
   
   throttle_usecs:       100000
   throttle_usecs_check:  10000

#Time between automatic restarts of FEB. Set to 0 to disable
   feb_restart_period_s: 0

#time at the beginning of run during which all fragments are discarded
   initial_delay_s: 0

   fragment_period_ms: 10

  #Time between FEB polls
   feb_poll_ms : 31



ProbeBitStream : '
00000000000000000000000000000000 # Out_fs From channel 0 to 31 Analog
00000000000000000000000000000000 # Out_ssh_LG From channel 0 to 31 Analog
00000000000000000000000000000000 # PeakSensing_modeb_LG From channel 0 to 31 Digital
00000000000000000000000000000000 # Out_ssh_HG From channel 0 to 31 Analog
00000000000000000000000000000000 # PeakSensing_modeb_HG 32 From channel 0 to 31 Digital
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 # Out_PA_HG/Out_PA_LG 64 From channel 0 to 15 Analog 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 # Out_PA_HG/Out_PA_LG 64 From channel 16 to 31 Analog
'
  FEBConfigurationMAC92 : {
#include "crt_configuration.fcl"
  }
}

event_builder: {

  expected_fragments_per_event: 1
  max_fragment_size_bytes: 256000
  buffer_count: 16
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
#how many init fragments we expect
  init_fragment_count: 0


}

art: {
  services: {
    ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService }
    TimeTracker: {}
    ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: "SBND" }
  }

outputs:{
  rootout:{
    module_type: RootOutput
    fileName: "/data1/crt01_%#.root"
    compressionLevel: 5
    fileProperties: {
      maxEvents: 1000
      maxSubRuns: 1
      maxRuns: 1
    }
  }
}


physics:{

  analyzers: {}
  producers: {}
  filters:   {}

  outstream: [ rootout ]
  end_paths: [ outstream ]

}

source:{
  module_type: ArtdaqInput
  waiting_time: 900
  resume_after_timeout: true
}

process_name: Driver
}

