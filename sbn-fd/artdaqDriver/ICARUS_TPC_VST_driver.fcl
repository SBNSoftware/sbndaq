# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

events_to_generate:500
run_number: 2
debug_cout: true

fragment_receiver: {

   # Parameters defining and configuring the fragment generator to be used
   		    
   generator: PhysCrateData 

   # Parameters configuring the fragment generator's parent class
   # artdaq::CommandableFragmentGenerator

   fragment_id: 0
   board_id: 0

   nADCBits: 12   
   SamplesPerChannel: 4096
   ChannelsPerBoard: 64

   BoardIDs: [ 0x100, 0x101, 0x102, 0x103, 0x104, 0x105, 0x106, 0x107, 0x108 ]
   CrateID: 0x1
   RunNumber: @local::run_number
   CompressionScheme: 0

   VetoPort: 7654
   VetoHost: "137.138.194.204"
   DoVetoTest: false
   VetoTestPeriod: 1e6

   TestPulseType: 0 #0 - disable, 1 - external, 2 - internal_even, 3 - internal_odd
   DCOffsetTestPulse: 0x8000   
   
   DCOffsetA: 0x8000
   DCOffsetB: 0x8000
   DCOffsetC: 0x8000
   DCOffsetD: 0x8000

   destinations:{console:{threshold:"DEBUG" type:"cout"}}

}  		  

   metrics:{
     verbosefile: {
       level: 3
       metricPluginType: "file"
       fileMode: "Overwrite"
       fileName: "metrics.out"
       uniquify: false
     }
   }


event_builder: {

  expected_fragments_per_event: 1
  max_fragment_size_bytes: 0x10000000
  buffer_count: 20 
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
}

######################################################################
# The ART code
######################################################################

services:
{
  TFileService: { fileName: "output_waveforms.root" }
}

physics:
{
  analyzers:
  {
    dump:
    {
      module_type: PhysCrateDump
      raw_data_label: "daq"
      num_adcs_to_show: 1024   # Obviously this should be no more than ADC counts per fragment
    }
    qscan:
    {
      module_type: PhysCrateWriteICARUSDataFile
      raw_data_label: "daq"
      file_output_location: "/Data1/icartdaq"
      file_output_name: "icartdaq_qscanFormat"
    }
    view:
    {
      module_type: PhysCrateViewer
      raw_data_label: "daq"
    }
    
}

  producers:
  {
  }

  a1: [ dump, qscan, view ]
  p1: [ ]
  e1: [ out1, rootout ]
  #end_paths: [ e1, a1 ]
  #end_paths: [ e1 ]
  end_paths: [ e1 ]
}

outputs:
{

 rootout:
  {
    module_type: RootOutput
    fileName: "/home/nfs/icarus/VST_Data/data_run%R_%#_%to.root"
    compressionLevel: 0

    fileProperties:{
          maxEvents: 100
	  maxSubRuns: 1
	  maxRuns: 1
          granularity: Event
    }
  }

  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }
}

source:
{
module_type: IcarusInput
waiting_time: 900
resume_after_timeout: true
# fragment_type_map: [ [2, "PHYSCRATEDATA" ] , [3,"PHYSCRATESTAT"]]
}

process_name: Driver


