events_to_generate: 2000
run_number: 100


services: {
  ArtdaqSharedMemoryServiceInterface: {
     service_provider: ArtdaqSharedMemoryService }
  #ArtdaqFragmentNamingServiceInterface: {service_provider: IcarusFragmentNamingService }
  ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: "Icarus"}
}

fragment_receiver: {

   generator: WhiteRabbitReadout

   #fragment_type: WhiteRabbitEvent
   max_fragment_size_bytes: 500
   fragment_id: 0x4001
   #fragment_id: 0
   board_id: 1
   #board_id: 0
   generated_fragments_per_event: 1
   ### trigger communication pieces
   config_port: 63000
   #config_ip: "192.168.191.79" #for SPEXI
   config_ip: "192.168.184.8" #for fake trigger tests - icarus-clk01
   #data_port: 6343
   #data_ip: "192.168.191.79" #for SPEXI
   data_port: 62999
   data_ip: "192.164.184.8" #for fake trigger tests - icarus-gateway01
   #ip: "192.168.191.78" #for testing on WireShark
   
   use_wr_time: true

   ### how many times to retry/wait for init
   n_init_retries: 0
   n_init_timeout: 100000 #ms

}

event_builder: {
  send_init_fragments: false
  expected_fragments_per_event: 1
  max_fragment_size_bytes: 10000000
  buffer_count: 20
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
}

physics:{

  analyzers: {}
  producers: {}
  filters:   {}

  outstream: [ rootout ]
  end_paths: [ outstream ]

}

outputs:{

  rootout:{
    module_type: RootOutput
    fileName: "/home/nfs/torretta"
    compressionLevel: 0

    fileProperties:{
      maxEvents: 2000
    }

  }


  testOutput: {
    module_type: RootDAQOut
    fileName: "/data/test_daq/data_%p_run%R_%#_%to.root"

    fileProperties: { 
      maxSubRuns: 1 
      maxRuns: 1 
      maxEvents: 100
    }

    fastCloning: true
    compressionLevel: 1
    SelectEvents: []    
  }

}


source: {
  module_type: ArtdaqInput
  waiting_time: 2500000
  resume_after_timeout: true
  fragment_type_map: [ [10, "WhiteRabbitEvent"] ]
}

metrics:{

#  graphite:{
#    level: 5
#    metricPluginType: "graphite"
#    reporting_interval: 1.0
#    host: "sbn-daq02.fnal.gov"
#    port: 2003
#    namespace: "artdaqDriver.BernCRTZMQ."
#  }

}

process_name: Driver
