services: {
  ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService }
  ArtdaqFragmentNamingServiceInterface: { service_provider: ArtdaqFragmentNamingService helper_plugin: "SBND" }
}

daq: {
  aggregator: {
    expected_events_per_bunch: 1
    print_event_store_stats: true
    event_queue_wait_time: 5
    buffer_count: 10
    onmon_event_prescal: 1
    is_data_logger: true

    broadcast_buffer_size: 0x10000000
    auto_suppression_enabled: false

    tcp_receive_buffer_size: 64000
    routing_token_config: {
        ## True if using the Routing Manager
        use_routing_manager: false
   }

  init_fragment_count: 10 # must match the number of running eventbuilders

	sources: { }
  }

  metrics: {
    aggFile: {
      metricPluginType: "file"
      level_string: "1-10,11-20"

      fileName : "/daq/log/metrics/dl00_metrics.log"
      uniquify: true
    }

    send_system_metrics: true
    send_process_metrics: true

#    graphite: {
#      level_string: "1-10,11-20"
#      metricPluginType: "graphite"
#      reporting_interval: 10.0
#      host:"192.168.191.18"
#      port:2003
#      namespace: "sbnd.dl00."
#    } 
  }

}

source: {
  module_type: ArtdaqInput
  register_fragment_types: false
}
outputs: {
  normalOutput: {
    module_type: RootDAQOut
    fileName: "/data/daq/data_dl00_run%R_%#_%to.root"

    fileProperties: { 
      maxSubRuns: 1 
      maxRuns: 1 
      maxEvents: 50 #close files out a little faster for the prescaled stream
    }

    fastCloning: true
    compressionLevel: 0
    SelectEvents: [p2]    
  }
  testOutput: {
    module_type: RootDAQOut
    fileName: "/data/test_daq/data_dl00_run%R_%#_%to.root"

    fileProperties: { 
      maxSubRuns: 1 
      maxRuns: 1 
      maxEvents: 100
    }

    fastCloning: true
    compressionLevel: 0
    SelectEvents: []    
  }
  rootNetOutput: {
    module_type: RootNetOutput
    broadcast_sends: true
    nonblocking_sends: true
  	destinations: { }
    SelectEvents: [pd]
    host_map: [{ 
      rank: -1
      host: "localhost"
    }]   
  }

}
physics: {
  analyzers: { }

  producers: {
   }

  filters: {
    prescale50: { module_type: "Prescaler"
    		  prescaleFactor: 50
 		  prescaleOffset: 0
		}

    prescale10: { module_type: "Prescaler"
    		  prescaleFactor: 10
 		  prescaleOffset: 0
		}

    prescale25: { module_type: "Prescaler"
    		  prescaleFactor: 25
 		  prescaleOffset: 0
		}

    prescale5: { module_type: "Prescaler"
    		  prescaleFactor: 5
 		  prescaleOffset: 0
		}

    prescale1: { module_type: "Prescaler"
    		  prescaleFactor: 1
 		  prescaleOffset: 0
		}
  }

  pd: [ prescale5 ]
  p2: [ prescale1 ]
  a1: [ ]
  #my_output_modules: [ normalOutput , testOutput, rootNetOutput ]
  my_output_modules: [ testOutput, rootNetOutput ]
  #my_output_modules: [ rootNetOutput ]

  #my_output_modules: [  ]
  #my_output_modules: [  testOutput ]
  end_paths: [ my_output_modules ]
}
process_name: DAQDL
