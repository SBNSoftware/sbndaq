services: {
  scheduler: {
  }

  ArtdaqSharedMemoryServiceInterface: {
   service_provider: ArtdaqSharedMemoryService
  }
  ArtdaqFragmentNamingServiceInterface: {service_provider: IcarusFragmentNamingService }
}

## Use when running a multiple elements with one in push mode and the rest in pull mode
daq: {
  event_builder: {
    expected_fragments_per_event: 0  # Will be set by DAQInterface
    #max_fragment_size_bytes: 16777216 #400000
    max_fragment_size_bytes: 16777216 #400000
    use_art: true
    #buffer_count: 200
    buffer_count: 100
    #max_incomplete_events: 1500 # Same as boardreader sync interval
    verbose: true
    send_requests: true
        request_address: "227.128.9.129"          # Multi-cast request address
        #multicast_interface_ip: "sbnd-daq33-priv" # needed to send requests successfully through the private network
        multicast_interface_ip: "131.225.250.0" # needed to send requests successfully through the private network
        request_port: 3001
        num_requests: 1500
    print_event_store_stats: true
    routing_token_config: {
    use_routing_master: false
    }
    incomplete_event_report_interval_ms: 1000
    stale_buffer_timeout_usec: 10000000

## Use when running a single subsystem in push mode
#daq: {
#  event_builder: {
#    expected_fragments_per_event: 0  # Will be set by DAQInterface
#    
#    stale_buffer_timeout_usec: 10000000
#    buffer_count: 50
#
#    verbose: false
#    max_fragment_size_bytes: 40000000
#    incomplete_event_report_interval_ms: 100
#    send_requests: false
#    use_art: true
#    print_event_store_stats: false
#    routing_token_config: {
#      use_routing_master: false
#    }

    sources: { }
  }
  metrics: {
    evbFile: {
      metricPluginType: "file"
      level: 3
      fileName: "/scratch/wfb/evb01_metrics.log"
      uniquify: true
    }
    #graphite: {
    #  level:5
    #  metricPluginType: "graphite"
    #  reporting_interval: 10.0
    #  host:"sbn-daq02.fnal.gov"
    #  port:2003
    #  namespace:"artdaq.evb01."
    #} 
  }

} 

outputs: {
  rootNetOutput: {
    module_type: RootNetOutput
    #broadcast_sends: true
  	destinations: {	}

  	routing_table_config: {
	    use_routing_master: false
	 }
  }

  normalOutput: {
    module_type: RootOutput
    fileName: "/scratch/wfb/sbndaq_eb00_r%06r_sr%02s_%to_%#.root"
    fileProperties: { maxSubRuns: 1 maxRuns: 1  }
    compressionLevel: 0
    fastCloning: false
  }
}

physics: {
  analyzers: {}

  producers: {}

  filters: {}

  
  a1: [ ]

  # my_output_modules: [  ]
  my_output_modules: [ rootNetOutput ]
  #my_output_modules: [ normalOutput ]
}
source: {
  module_type: ArtdaqInput
  waiting_time: 2500000
  resume_after_timeout: true
}
process_name: DAQ
