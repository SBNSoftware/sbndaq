#!/usr/bin/env bash

# if you want verbose output just pass any argument to this script
verbose=$1

# change the localhost to the priv subnet
sed -i 's/LOCALHOST/'${HOSTNAME%%.*}'/g' MessageFacility_Local.fcl


function getStatus()
{
  local NODAQInterface=$(echo $(status.sh) | grep -q "No DAQInterface instances"; echo $?)
  if [ $NODAQInterface -eq 0 ]; then
    echo "No DAQInterface instances are found to exist; exiting."
    exit 1
  fi
  status=`status.sh | grep String | awk '{print $2}' | tr -d "'"`
  if [ $verbose ]; then
    echo $status
  else
    [ $1 != "$status" ] && (echo $status)
  fi
}

function waitStatus()
{
  getStatus $1
  while [ "$status" != $1 ]
  do
    sleep 2
    getStatus $1
    [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
  done
}

getStatus "nil"
# [ $status == 'Existing'] && (kill_daqinterface_on_partition.sh 0; exit 0 )

#setdaqcomps.sh pmtx04 pmtx03 pmtx02 pmtx01 ptb01 tpc01
#setdaqcomps.sh pmtx02 pmtx01 ptb01
#setdaqcomps.sh tpc01 ptb01
#setdaqcomps.sh pmtx01 ptb01
#setdaqcomps.sh crt05
#setdaqcomps.sh pmtx01 tpc01 ptb01 crt05
setdaqcomps.sh mbb01 ptb01

send_transition.sh boot boot.txt
waitStatus "booted"

send_transition.sh config standard
waitStatus "ready"

# echo "pgrep BoardReader: $(pgrep BoardReader)"
# echo "pgrep EventBuilder: $(pgrep EventBuilder)"
#for i in $(pgrep BoardReader); do taskset -cp 1-15 $i; done
# for i in $(pgrep EventBuilder); do taskset -cp 1-15 $i; done

# change back localhost
sed -i 's/'${HOSTNAME%%.*}/LOCALHOST'/g' MessageFacility_Local.fcl

send_transition.sh start
waitStatus "running"
