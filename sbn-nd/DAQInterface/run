#!/usr/bin/env bash

# if you want verbose output just pass any argument to this script
verbose=$1

# change the localhost to the priv subnet
sed -i 's/LOCALHOST/'${HOSTNAME%%.*}'/g' MessageFacility_Local.fcl

function getStatus()
{
  local NODAQInterface=$(echo $(status.sh) | grep -q "No DAQInterface instances"; echo $?)
  if [ $NODAQInterface -eq 0 ]; then
    echo "No DAQInterface instances are found to exist; exiting."
    exit 1
  fi
  status=`status.sh | grep String | awk '{print $2}' | tr -d "'"`
  echo $status
}

getStatus "nil"
# [ $status == 'Existing'] && (kill_daqinterface_on_partition.sh 0; exit 0 )

#setdaqcomps.sh pmtx04 pmtx03 pmtx02 pmtx01 ptb01 tpc01
#setdaqcomps.sh pmtx02 pmtx01 ptb01
#setdaqcomps.sh tpc01 ptb01
#setdaqcomps.sh pmtx01 ptb01
#setdaqcomps.sh crt05
#setdaqcomps.sh pmtx01 tpc01 ptb01 crt05
setdaqcomps.sh  tpc11 tpc10 tpc09 tpc08 tpc07 tpc06 tpc05 tpc04 tpc03 tpc02 tpc01 ptb01
#setdaqcomps.sh tpc02 tpc01 ptb01 

send_transition.sh boot boot.txt
getStatus "booting"
while [ "$status" != 'booted' ]
do
  sleep 2
  getStatus "booting"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
done

send_transition.sh config standard
getStatus "configuring"
while [ "$status" != 'ready' ]
do
  sleep 2
  getStatus "configuring"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
  # [ "$status" == 'stopped' ] && ( exit 1 )
done

# echo "pgrep BoardReader: $(pgrep BoardReader)"
# echo "pgrep EventBuilder: $(pgrep EventBuilder)"
#for i in $(pgrep BoardReader); do taskset -cp 1-15 $i; done
# for i in $(pgrep EventBuilder); do taskset -cp 1-15 $i; done

# change back localhost
sed -i 's/'${HOSTNAME%%.*}/LOCALHOST'/g' MessageFacility_Local.fcl

send_transition.sh start
# getStatus "starting"
sleep 2
getStatus "starting"
while [ "$status" != 'running' ]
do
  sleep 2
  getStatus "starting"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
done


