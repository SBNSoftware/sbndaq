#!/usr/bin/env bash
this_start=$(date +%s)

function getStatus()
{
  status=`status.sh | grep String | awk '{print $2}' | tr -d "'"`
#  [ $1 != "$status" ] && (echo $status)
  echo $status
}

getStatus "nil"
# [ $status == 'Existing'] && (kill_daqinterface_on_partition.sh 0; exit 0 )


#setdaqcomps.sh crt01
#setdaqcomps.sh crt01PULL pmtx03 
#setdaqcomps.sh pmtx03
#setdaqcomps.sh pmtx04
#setdaqcomps.sh spectdc pmtx03
#setdaqcomps.sh spectdc pmtx03 crt01PULL
#setdaqcomps.sh pmtx03 crt2x2upstrPULL crt2x2dwnstrPULL ptb01PULL spectdc
#setdaqcomps.sh pmtx03 crt2x2dwnstrPULL ptb01PULL spectdc
#setdaqcomps.sh pmtx03 ptb01PULL spectdc
#setdaqcomps.sh pmtx03 crt2x2upstrPULL crt2x2dwnstrPULL spectdc
#setdaqcomps.sh pmtx03 crt2x2upstrPULL crt2x2dwnstrPULL ptb01PULL
#setdaqcomps.sh pmtx03 crt01PULL spectdc
#setdaqcomps.sh pmtx03 crt01PULL spectdc ptb01PULL

# runs for PDSR0 (rely on external trigger)
#setdaqcomps.sh  pmtx_pdsR0_01 pmtx_pdsR0_02PULL pmtx_pdsR0_03PULL pmtx_pdsR0_04PULL pmtx_pdsR0_05PULL pmtx_pdsR0_06PULL pmtx_pdsR0_07PULL #pmtx_pdsR0_08PULL

# runs for PDSR0 + PTB providing triggers
setdaqcomps.sh ptb01PULL pmtx_pdsR0_01 pmtx_pdsR0_02PULL pmtx_pdsR0_03PULL pmtx_pdsR0_04PULL pmtx_pdsR0_05PULL pmtx_pdsR0_06PULL pmtx_pdsR0_07PULL pmtx_pdsR0_08PULL

# run setup for pedestal equalization (external trigger)
#setdaqcomps.sh pmtx_pdsR0_01_PedestalEqualization pmtx_pdsR0_02_PedestalEqualization pmtx_pdsR0_03_PedestalEqualization pmtx_pdsR0_04_PedestalEqualization pmtx_pdsR0_05_PedestalEqualization pmtx_pdsR0_06_PedestalEqualization pmtx_pdsR0_07_PedestalEqualization #pmtx_pdsR0_08_PedestalEqualization

# run setup for pedestal equalization + PTB triggers
#setdaqcomps.sh ptb01PULL pmtx_pdsR0_01_PedestalEqualization pmtx_pdsR0_02_PedestalEqualization pmtx_pdsR0_03_PedestalEqualization pmtx_pdsR0_04_PedestalEqualization pmtx_pdsR0_05_PedestalEqualization pmtx_pdsR0_06_PedestalEqualization pmtx_pdsR0_07_PedestalEqualization #pmtx_pdsR0_08_PedestalEqualization


send_transition.sh boot boot.txt
getStatus "booting"
while [ "$status" != 'booted' ]
do
  sleep 2
  getStatus "booting"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
done

#send_transition.sh config $2
send_transition.sh config standard

getStatus "configuring"
while [ "$status" != 'ready' ]
do
  sleep 2
  getStatus "configuring"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
  # [ "$status" == 'stopped' ] && ( exit 1 )
done

# report_datafile_location

send_transition.sh start
# getStatus "starting"
sleep 2
getStatus "starting"
while [ "$status" != 'running' ]
do
  sleep 2
  getStatus "starting"
  [ "$status" == 'stopped' ] && (kill_daqinterface_on_partition.sh $DAQINTERFACE_PARTITION_NUMBER; exit 1 )
done

this_stop=$(date +%s)
echo "DAQ started in $(( this_stop - this_start )) seconds."
