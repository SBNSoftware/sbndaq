
services: {

ArtdaqSharedMemoryServiceInterface: {

service_provider: ArtdaqSharedMemoryService

}
ArtdaqFragmentNamingServiceInterface: {

service_provider: ArtdaqFragmentNamingService

helper_plugin: "Icarus"

}
}
daq: {

aggregator: {

expected_events_per_bunch: 1

print_event_store_stats: true

buffer_count: 20

event_queue_depth: 2

event_queue_wait_time: 1

onmon_event_prescale: 1

is_dispatcher: true

overwrite_mode: true
#broadcast_buffer_size: 0x10000000
broadcast_buffer_size: 1e9

routing_token_config: {

use_routing_master: false

}
tcp_receive_buffer_size: 64000

init_fragment_count: 1 #0 #must match the number of running dataloggers, should be set by DAQInterface
#0 #must match the number of running dataloggers, should be set by DAQInterface
auto_suppression_enabled: false
#Make sure Dispatcher doesn't crash on 'oversized' fragment
maximum_oversize_fragment_count: 0
#tells shmem event manager it can drop data on receive if buffers are full
non_reliable_mode: true

non_reliable_mode_retry_count: 1

sources: {

}
}
metrics: {

aggFile: {

metricPluginType: "file"

level: 3

fileName: "/daq/log/metrics/disp_%UID%_metrics.log"

uniquify: true

}
#graphite: {
#
#level: 5
#
#metricPluginType: "graphite"
#
#reporting_interval: 10.0
#
#host: "192.168.191.18"
#
#port: 2003
#
#namespace: "sbnd.disp00."
#
#}
}
}
source: {

module_type: ArtdaqInput

register_fragment_types: false

}
outputs: {

}
physics: {

}
process_name: DAQDP
