
services: {

ArtdaqSharedMemoryServiceInterface: {

service_provider: ArtdaqSharedMemoryService

}
ArtdaqFragmentNamingServiceInterface: {

service_provider: ArtdaqFragmentNamingService

helper_plugin: "Icarus"

}
}
daq: {

event_builder: {

stale_buffer_timeout_usec: 10000000

expected_fragments_per_event: 0 # Will be set by DAQInterface
# Will be set by DAQInterface
use_art: true

print_event_store_stats: true

buffer_count: 30

verbose: true

send_requests: true

request_address: "227.128.12.35"

request_port: 3502

multicast_interface_ip: "10.226.36.0" # -- should match the private net
# -- should match the private net
num_requests: 500

tcp_receive_buffer_size: 64000

routing_token_config: {

use_routing_master: false

}
sources: {

}
}
metrics: {

evbFile: {

metricPluginType: "file"

level: 0

fileName: "/daq/log/metrics/evb_%UID%_metrics.log"

uniquify: true

}
send_system_metrics: true

send_process_metrics: true

#graphite: {
#
#level: 10
#
#metricPluginType: "graphite"
#
#reporting_interval: 5.0
#
#host: "10.226.36.26"
#
#port: 2003
#
#namespace: "sbnd.evb00."
#
#}
}
}
outputs: {

normalOutput: {

module_type: RootDAQOut

fileName: "/data/daq/data_%p_run%R_%#_%to.root"

fileProperties: {

maxSubRuns: 1

maxRuns: 1

maxEvents: 50 #close files out a little faster for the prescaled stream

}
fastCloning: true

compressionLevel: 1

SelectEvents: [pwrite]

}
testOutput: {

module_type: RootDAQOut

fileName: "/data/test_daq/data_%p_run%R_%#_%to.root"

fileProperties: {

maxSubRuns: 1

maxRuns: 1

maxEvents: 100

}
fastCloning: true

compressionLevel: 1

SelectEvents: []

}
rootNetOutput: {

module_type: RootNetOutput

broadcast_sends: true

nonblocking_sends: true

destinations: {

}
SelectEvents: [pdisp]

host_map: [{

rank: -1

host: "localhost"

}]

routing_table_config: {
use_routing_manager: false
}
}
}
physics: {

analyzers: {

}
producers: {

}
filters: {

prescale50: {

module_type: "Prescaler"

prescaleFactor: 50

prescaleOffset: 0

}
prescale10: {

module_type: "Prescaler"

prescaleFactor: 10

prescaleOffset: 0

}
prescale25: {

module_type: "Prescaler"

prescaleFactor: 25

prescaleOffset: 0

}
prescale5: {

module_type: "Prescaler"

prescaleFactor: 5

prescaleOffset: 0

}
prescale1: {

module_type: "Prescaler"

prescaleFactor: 1

prescaleOffset: 0

}
}
p1: []

pwrite: [prescale1]

pdisp: [prescale5]

trigger_paths: [pwrite, pdisp]

a1: []
#my_output_modules: [ normalOutput ]
my_output_modules: [normalOutput, rootNetOutput]

end_paths: [my_output_modules]

}
source: {

module_type: ArtdaqInput

waiting_time: 2500000

resume_after_timeout: true

}
process_name: DAQ
