events_to_generate: 5000

debug_cout: true

run_number: 15

fragment_receiver: {

   generator: BernCRTData
   
   fragment_type: BERNCRTV2

#unused but required field, dummy value
   board_id: 1

   ethernet_port: eno1

#Fragment id array
#First 8 bits of the 16 bit fragment id
#first digit: 3 - ICARUS CRT, b - SBND CRT
#second digit: 0 - bottom CRT, 1 - side CRT, 2 - top CRT
#third and fourth digit - last 8 bits of the MAC address
#e.g. ICARUS side CRT FEB 205 (0xcd) fragment id is 0x31cd
   fragment_ids : [ 0x31cd ]
#Whether or not turn on bias HV on the individual FEBs. Size must be the same as FEBIDs
   TurnOnHV : [ false ]
#How much the PPS signal coming to FEB is delayed due to cable length (normally should be > 0)
   PPS_offset_ns : [ 85 ]

#Time between FEB polls
   feb_poll_ms : 31

#Capacity of internal fragment generator buffer for one FEB
   FEBBufferCapacity: 5000
   
   fragment_period_ms: 10

#Workarounds for issues with FEB.
#Note that they are likely to remove legitimate data,
#preserve corrupted data and hide problems

#Time between automatic restarts of FEB. Set to 0 to disable
   feb_restart_period_s: 0

#time at the beginning of run during which all fragments are discarded
   initial_delay_s: 0

ProbeBitStream : '
00000000000000000000000000000000 # Out_fs From channel 0 to 31 Analog
00000000000000000000000000000000 # Out_ssh_LG From channel 0 to 31 Analog
00000000000000000000000000000000 # PeakSensing_modeb_LG From channel 0 to 31 Digital
00000000000000000000000000000000 # Out_ssh_HG From channel 0 to 31 Analog
00000000000000000000000000000000 # PeakSensing_modeb_HG 32 From channel 0 to 31 Digital
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 # Out_PA_HG/Out_PA_LG 64 From channel 0 to 15 Analog 
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 # Out_PA_HG/Out_PA_LG 64 From channel 16 to 31 Analog
'
#    SlowControlBitStream205 : @local::bitstream

  FEBConfigurationMAC205 : {

#include "crt_configuration.fcl"
  } 

}

event_builder: {

  expected_fragments_per_event: 1
  max_fragment_size_bytes: 256000
  buffer_count: 16
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
#how many init fragments we expect
  init_fragment_count: 0

}

art: {
  services: {
    ArtdaqSharedMemoryServiceInterface: { service_provider: ArtdaqSharedMemoryService }
    TimeTracker: {}
    ArtdaqFragmentNamingServiceInterface: {
      service_provider: ArtdaqFragmentNamingService
      helper_plugin: "Icarus" }
    }


  physics:{

    analyzers: {}
    producers: {}
    filters:   {}

    outstream: [ rootout ]
    end_paths: [ outstream ]
  }

  outputs:{

    rootout:{
      module_type: RootDAQOut
      fileName: "/data1/%to_%tc_crt01_%#_new.root"
      compressionLevel: 5
      fileProperties: {
        maxEvents: 100000
        maxSubRuns: 1
        maxRuns: 1
      }
    }
  }

  source:{
    module_type: ArtdaqInput
    waiting_time: 900
    resume_after_timeout: true
  }

  process_name: Driver
}
